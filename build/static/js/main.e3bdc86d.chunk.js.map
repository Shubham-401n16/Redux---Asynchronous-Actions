{"version":3,"sources":["store/cartReducer.js","store/categoriesReducer.js","store/productsReducer.js","store/index.js","store/middleware/thunk.js","store/store-actions.js","components/Products.js","components/Categories.js","components/Header.js","components/Footer.js","components/SimpleCart.js","App.js","index.js"],"names":["initState","cartContents","cartCount","reducer","state","action","console","log","newState","type","push","payload","i","length","name","splice","allCategories","currentCategory","allProducts","inStock","reducers","combineReducers","cart","cartReducer","categories","categoriesReducer","products","productsReducer","createStore","applyMiddleware","store","next","dispatch","getState","addCategories","addProducts","useStyles","makeStyles","root","maxWidth","media","height","connect","getProducts","data","a","axios","get","results","addToCart","props","useEffect","classes","productsHTML","category","Card","key","className","CardActionArea","CardMedia","image","img","title","CardContent","Typography","gutterBottom","variant","component","price","color","description","CardActions","Button","size","onClick","disabled","stock","getCategories","changeCategory","actions","categoriesHTML","e","displayName","Footer","id","href","target","src","alt","removeFromCart","cartHTML","forEach","item","Grid","Delete","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3bdc86d.chunk.js","sourcesContent":["const initState = {\n    cartContents: [],\n    cartCount: 0\n  };\n  \n  const reducer = (state = initState, action) => {\n    console.log(\"cart reducer called\");\n  \n    let newState = { ...state };\n  \n    switch (action.type) {\n      // define our application's acceptable actions\n  \n      case \"CONSOLE_LOG\":\n        console.log(\"cart\");\n        break;\n  \n      case \"ADD_TO_CART\":\n        newState.cartContents.push(action.payload);\n        newState.cartCount++;\n        break;\n  \n      case \"REMOVE_FROM_CART\":\n        // newState.cartCount--;\n        // newState.cartContents = newState.cartContents.filter((val) => {\n        //     return val.name !== action.payload;\n        // });\n        // break;\n        for (let i = 0; i < newState.cartContents.length; i++) {\n          if (action.payload.name === newState.cartContents[i].name) {\n            newState.cartContents.splice(i, 1);\n            newState.cartContents = [...newState.cartContents];\n  \n            newState.cartCount--;\n            break;\n          }\n        }\n        break;\n      default:\n        break;\n    }\n  \n    return newState;\n  };\n  \n  const consoleLog = dispatch => {\n    return dispatch({ type: \"CONSOLE_LOG\" });\n  };\n  \n  const add = product => {\n    return { type: \"ADD_TO_CART\", payload: product };\n  };\n  \n  export default reducer;\n  export { consoleLog, add };\n  ","const initState = {\n    allCategories: [],\n    currentCategory: '',\n  };\n  \n  const reducer = (state = initState, action) => {\n    console.log(\"categories reducer called\");\n    let newState = { ...state };\n  \n    switch (action.type) {\n      case \"CONSOLE_LOG\":\n        console.log(\"categories\");\n        break;\n      case \"GET_CATEGORIES\":\n        newState.allCategories = [...action.payload];\n        break;\n      case \"CHANGE_CATEGORY\":\n        newState.currentCategory = action.payload;\n        break;\n      case \"ADD_CATEGORY\":\n        newState.allCategories.push(action.payload);\n        break;\n      default:\n        break;\n    }\n  \n    return newState;\n  };\n  \n  export default reducer;\n  ","const initState = {\n    allProducts: []\n  };\n  \n  const reducer = (state = initState, action) => {\n    console.log(\"products reducer called\");\n    let newState = { ...state };\n  \n    switch (action.type) {\n      // define our application's acceptable actions\n      case \"GET_PRODUCTS\":\n        newState.allProducts = [...action.payload];\n        break;\n      case \"ADD_PRODUCT\":\n        newState.allProducts.push(action.payload);\n        break;\n      case \"CONSOLE_LOG\":\n        console.log(\"products\");\n        break;\n      case \"ADD_TO_CART\":\n        for (let i = 0; i < newState.allProducts.length; i++) {\n          if (action.payload.name === newState.allProducts[i].name) {\n            newState.allProducts[i].inStock = newState.allProducts[i].inStock - 1;\n            newState.allProducts = [...newState.allProducts];\n            break;\n          }\n        }\n        break;\n      case \"REMOVE_FROM_CART\":\n        for (let i = 0; i < newState.allProducts.length; i++) {\n          if (action.payload.name === newState.allProducts[i].name) {\n            newState.allProducts[i].inStock = newState.allProducts[i].inStock + 1;\n            newState.allProducts = [...newState.allProducts];\n            break;\n          }\n        }\n        break;\n      default:\n        break;\n    }\n  \n    return newState;\n  };\n  \n  export default reducer;\n  ","import { createStore, combineReducers, applyMiddleware } from \"redux\";\n\nimport cartReducer from \"./cartReducer\";\nimport categoriesReducer from \"./categoriesReducer\";\nimport productsReducer from \"./productsReducer\";\nimport thunk from \"./middleware/thunk\";\n\nlet reducers = combineReducers({\n  cart: cartReducer,\n  categories: categoriesReducer,\n  products: productsReducer\n});\n\nexport default createStore(reducers, applyMiddleware(thunk));\n","export default store => next => action =>\n  typeof action === 'function'\n   ? action(store.dispatch, store.getState)\n   : next(action)","import axios from \"axios\";\n\nexport const getCategories = () => async dispatch => {\n  let results = await axios.get(\n    \"https://api-js401.herokuapp.com/api/v1/categories\"\n  );\n  dispatch(addCategories(results.data.results));\n  console.log(\"results\", results);\n};\n\nconst addCategories = payload => {\n  return {\n    type: \"GET_CATEGORIES\",\n    payload\n  };\n};\n\nexport const getProducts = () => async dispatch => {\n  let results = await axios.get(\n    \"https://api-js401.herokuapp.com/api/v1/products\"\n  );\n  dispatch(addProducts(results.data.results));\n};\n\nconst addProducts = payload => {\n  return {\n    type: \"GET_PRODUCTS\",\n    payload\n  };\n};\n\nexport const changeCategory = payload => {\n  return {\n    type: \"CHANGE_CATEGORY\",\n    payload\n  };\n};\n\nexport const addToCart = product => {\n  return {\n    type: \"ADD_TO_CART\",\n    payload: product\n  };\n};\n\nexport const removeFromCart = idx => {\n  return {\n    type: \"REMOVE_FROM_CART\",\n    payload: idx\n  };\n};\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport * as actions from \"../store/store-actions.js\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345\n  },\n  media: {\n    height: 140\n  }\n});\n\nfunction Products(props) {\n  // list all the products that belong to the\n  // current selected category\n\n  // only show the products that belong to the current category\n\n  const { getProducts, addToCart } = props;\n\n  useEffect(() => {\n    getProducts();\n  }, [getProducts]);\n\n  const classes = useStyles();\n  let productsHTML = [];\n\n  for (let i = 0; i < props.products.length; i++) {\n    if (props.products[i].category === props.currentCategory)\n      productsHTML.push(\n        <Card key={i} className={classes.root}>\n          <CardActionArea>\n            <CardMedia\n              className={classes.media}\n              image={props.products[i].img}\n              title={props.products[i].name}\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                {props.products[i].name}\n              </Typography>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                {props.products[i].price}\n              </Typography>\n              <Typography color=\"textPrimary\" component=\"p\">\n                Quantity: {props.products[i].inStock}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {props.products[i].description}\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n          <CardActions>\n            <Button\n              size=\"small\"\n              color=\"primary\"\n              onClick={() => {\n                addToCart(props.products[i]);\n              }}\n              disabled={props.products[i].stock < 1 ? true : false}\n            >\n              Add To Cart\n            </Button>\n            <Button size=\"small\" color=\"primary\">\n              View Details\n            </Button>\n          </CardActions>\n        </Card>\n      );\n  }\n\n  return (\n    <>\n      <h2>Products</h2>\n      <div className=\"main-product\">{productsHTML}</div>\n    </>\n  );\n}\n\n// connect() --> returns a function (assume it's called foo)\n// let foo = connect(mapStateToProps);\n// let connectedComponent = foo(Products)\n// export default connectedComponent\n\nconst mapStateToProps = state => {\n  return {\n    products: state.products.allProducts,\n    currentCategory: state.categories.currentCategory\n  };\n};\n\nconst mapDispatchToProps = (dispatch, getState) => ({\n  getProducts: data => dispatch(actions.getProducts(data)),\n  addToCart: data => dispatch(actions.addToCart(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Products);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"@material-ui/core\";\n//import * as actions from '../store/storeAction';\nimport * as actions from \"../store/store-actions\";\n\nfunction Categories(props) {\n  const { getCategories, changeCategory } = props;\n  useEffect(() => {\n    getCategories();\n  }, [getCategories]);\n\n  let categoriesHTML = [];\n\n  for (let i = 0; i < props.categories.length; i++)\n    categoriesHTML.push(\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        key={i}\n        onClick={e => {\n          changeCategory(props.categories[i].name);\n        }}\n      >\n        {props.categories[i].displayName || props.categories[i].name}\n      </Button>\n    );\n\n  return (\n    <>\n      <div className=\"main-category\">{categoriesHTML}</div>\n    </>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    categories: state.categories.allCategories\n  };\n};\n\nconst mapDispatchToProps = (dispatch, getState) => ({\n  getCategories: data => dispatch(actions.getCategories(data)),\n  changeCategory: payload => dispatch(actions.changeCategory(payload))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Categories);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nfunction Header(props) {\n  return (\n    <header>\n      <h1>401 Store</h1>\n      <p>Cart ({props.cart.cartCount})</p>\n    </header>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n      cart: state.cart,\n  };\n};\n\nexport default connect(mapStateToProps)(Header);","import React from 'react';\nexport default function Footer() {\n  return (\n    <footer>\n      <div id=\"external-account\">\n        <h1>Shubham Majumdar</h1>\n        <a href='https://www.linkedin.com/in/majumdar-shubham' target='_blank'>\n          <img src={'/assets/linkedin.jpg'} alt={'LinkedIn'} />\n        </a>\n        <a href='https://github.com/smajumdar22' target='_blank'>\n          <img src={'/assets/github.png'} alt={'GitHub'} />\n        </a>\n      </div>\n    </footer>\n  )\n}","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Grid,\n  Typography,\n  Button,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails\n} from \"@material-ui/core\";\nimport { Delete } from \"@material-ui/icons\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport * as actions from \"../store/store-actions.js\";\n\nfunction SimpleCart(props) {\n  const { removeFromCart } = props;\n\n  let cartHTML = [];\n\n  props.cartContents.forEach((item, i) => {\n    cartHTML.push(\n      <Grid>\n        <Typography>{item.name}</Typography>\n\n        <Button\n          onClick={e => {\n            removeFromCart(item);\n          }}\n        >\n          <Delete />\n        </Button>\n      </Grid>\n    );\n  });\n\n  return (\n    <Accordion>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"additional-actions1-content\"\n        id=\"additional-actions1-header\"\n      >\n        <Typography>Items</Typography>\n      </AccordionSummary>\n      <AccordionDetails>{cartHTML}</AccordionDetails>\n    </Accordion>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    cartContents: state.cart.cartContents,\n    cartCount: state.cart.cartCount\n  };\n}\n\nconst mapDispatchToProps = (dispatch, getState) => ({\n  removeFromCart: data => dispatch(actions.removeFromCart(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SimpleCart);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './styles/styles.scss';\nimport Products from './components/Products';\nimport Categories from './components/Categories';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport SimpleCart from './components/SimpleCart';\n\n\n// Connecting our app to our global state redux store\n// xx Wrap the whole app in a \"store provider\"\n// -- Pick individual components to \"connect\" and become \"consumers\"\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <div className='App'>\n                <Header />\n                <div className ='main-div'>\n                <Categories />\n                <SimpleCart/>\n                <Products />\n                </div>\n                <Footer />\n            </div>\n        </Provider>\n    );\n}\n\nexport default App;\n"," import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}